{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\learn React\\\\time-sheet\\\\src\\\\feature\\\\task\\\\component\\\\CreateTask\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Modal from \"@mui/material/Modal\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Alert, NativeSelect, Snackbar } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TitleHeader = styled.div`\n  font-size: 22px;\n`;\n_c = TitleHeader;\nconst NewTask = styled.div`\n  display: flex;\n  padding: 10px 25px;\n  gap: 250px;\n`;\n_c2 = NewTask;\nconst BtnNewTask = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 20px;\n  padding-top: 30px;\n`;\n_c3 = BtnNewTask;\nconst InputName = styled(TextField)``; // interface INewTask {\n//   name: string;\n//   type: string;\n// }\n\n_c4 = InputName;\n\nconst CreateTask = () => {\n  _s();\n\n  //   const { reset, control, handleSubmit } = useForm<INewTask>();\n  //   const dispatch = useDispatch();\n  //   const progress = useSelector((state: RootState) => state.task.progress);\n  //   const handleCreate = async (props: ICreateTaskReq) => {\n  //     dispatch(\n  //       createTask({\n  //         name: props.name,\n  //         type: +props.type,\n  //       })\n  //     );\n  //     reset({\n  //       name: \"\",\n  //       type: \"\",\n  //     });\n  //   };\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleOpenSnackbar = () => {\n    setOpen(false);\n    setOpenSnackbar(true);\n  };\n\n  const handleSnackBarClose = () => {\n    setOpenSnackbar(false);\n  }; //   useEffect(() => {\n  //     if (progress === \"done\" && open) {\n  //       dispatch(resetProgress());\n  //       setOpen(false);\n  //       handleOpenSnackbar();\n  //     }\n  //   }, [progress, open, dispatch]);\n\n\n  return /*#__PURE__*/_jsxDEV(NewTask, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      autoHideDuration: 2000,\n      onClose: handleSnackBarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"filled\",\n        severity: \"success\",\n        onClose: handleSnackBarClose,\n        children: \"Create Task Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        background: \"#f24b50\",\n        height: \"40px\"\n      },\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this),\n      onClick: handleOpen,\n      children: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: 300,\n          bgcolor: \"#fff\",\n          pt: 2,\n          px: 4,\n          pb: 3,\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(TitleHeader, {\n            children: \"New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            render: _ref => {\n              let {\n                field\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(InputName, {\n                label: \"Name *\",\n                variant: \"standard\" // {...field}\n                ,\n                style: {\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this);\n            } //   control={control}\n            //   defaultValue=\"\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"type\",\n            render: _ref2 => {\n              let {\n                field\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(NativeSelect, { ...field,\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 0,\n                  children: \"Common Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"Other Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this);\n            } //   control={control}\n            ,\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BtnNewTask, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              sx: {\n                color: \"#333333\"\n              },\n              onClick: handleClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"error\",\n              sx: {\n                background: \"#f24b50\",\n                color: \"#333333\"\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"BDwWK8IB3HSIBdeHDfY6vTvVmsw=\");\n\n_c5 = CreateTask;\nexport default CreateTask;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TitleHeader\");\n$RefreshReg$(_c2, \"NewTask\");\n$RefreshReg$(_c3, \"BtnNewTask\");\n$RefreshReg$(_c4, \"InputName\");\n$RefreshReg$(_c5, \"CreateTask\");","map":{"version":3,"names":["React","useEffect","useState","styled","AddIcon","Button","Box","TextField","Modal","useForm","Controller","Alert","NativeSelect","Snackbar","TitleHeader","div","NewTask","BtnNewTask","InputName","CreateTask","open","setOpen","handleOpen","handleClose","openSnackbar","setOpenSnackbar","handleOpenSnackbar","handleSnackBarClose","vertical","horizontal","background","height","position","top","left","transform","width","bgcolor","pt","px","pb","display","flexDirection","field","color"],"sources":["C:/Users/Admin/Desktop/learn React/time-sheet/src/feature/task/component/CreateTask/CreateTask.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport { Alert, NativeSelect, Snackbar } from \"@mui/material\";\r\n\r\nconst TitleHeader = styled.div`\r\n  font-size: 22px;\r\n`;\r\n\r\nconst NewTask = styled.div`\r\n  display: flex;\r\n  padding: 10px 25px;\r\n  gap: 250px;\r\n`;\r\n\r\nconst BtnNewTask = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 20px;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst InputName = styled(TextField)``;\r\n\r\n// interface INewTask {\r\n//   name: string;\r\n//   type: string;\r\n// }\r\n\r\nconst CreateTask = () => {\r\n  //   const { reset, control, handleSubmit } = useForm<INewTask>();\r\n  //   const dispatch = useDispatch();\r\n  //   const progress = useSelector((state: RootState) => state.task.progress);\r\n  //   const handleCreate = async (props: ICreateTaskReq) => {\r\n  //     dispatch(\r\n  //       createTask({\r\n  //         name: props.name,\r\n  //         type: +props.type,\r\n  //       })\r\n  //     );\r\n  //     reset({\r\n  //       name: \"\",\r\n  //       type: \"\",\r\n  //     });\r\n  //   };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const handleOpenSnackbar = () => {\r\n    setOpen(false);\r\n    setOpenSnackbar(true);\r\n  };\r\n\r\n  const handleSnackBarClose = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     if (progress === \"done\" && open) {\r\n  //       dispatch(resetProgress());\r\n  //       setOpen(false);\r\n  //       handleOpenSnackbar();\r\n  //     }\r\n  //   }, [progress, open, dispatch]);\r\n  return (\r\n    <NewTask>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        autoHideDuration={2000}\r\n        onClose={handleSnackBarClose}\r\n      >\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity=\"success\"\r\n          onClose={handleSnackBarClose}\r\n        >\r\n          Create Task Success\r\n        </Alert>\r\n      </Snackbar>\r\n      <Button\r\n        style={{ background: \"#f24b50\", height: \"40px\" }}\r\n        variant=\"contained\"\r\n        startIcon={<AddIcon />}\r\n        onClick={handleOpen}\r\n      >\r\n        New Task\r\n      </Button>\r\n      <Modal open={open}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: 300,\r\n            bgcolor: \"#fff\",\r\n            pt: 2,\r\n            px: 4,\r\n            pb: 3,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <form>\r\n            <TitleHeader>New Task</TitleHeader>\r\n            <Controller\r\n              name=\"name\"\r\n              render={({ field }) => {\r\n                return (\r\n                  <InputName\r\n                    label=\"Name *\"\r\n                    variant=\"standard\"\r\n                    // {...field}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                );\r\n              }}\r\n              //   control={control}\r\n              //   defaultValue=\"\"\r\n            />\r\n            <Controller\r\n              name=\"type\"\r\n              render={({ field }) => (\r\n                <NativeSelect {...field} style={{ width: \"100%\" }}>\r\n                  <option value={0}>Common Task</option>\r\n                  <option value={1}>Other Task</option>\r\n                </NativeSelect>\r\n              )}\r\n              //   control={control}\r\n              defaultValue=\"\"\r\n            />\r\n            <BtnNewTask>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                sx={{ color: \"#333333\" }}\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                sx={{ background: \"#f24b50\", color: \"#333333\" }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </BtnNewTask>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n    </NewTask>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}