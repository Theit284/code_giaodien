{"ast":null,"code":"import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { archiveTask, createTask, deArchiveTask, deleteTask, getTask } from \"../actions/taskAction\";\nconst initialState = {\n  tasks: [],\n  progress: \"\",\n  success: \"\",\n  error: \"\"\n};\nconst taskSlice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    resetError: state => {\n      state.error = \"\";\n    },\n    resetSuccess: state => {\n      state.success = \"\";\n    },\n    resetProgress: state => {\n      state.progress = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getTask.fulfilled, (state, action) => {\n      state.progress = \"done\";\n      state.tasks = action.payload.result;\n    });\n    builder.addCase(createTask.pending, (state, action) => {\n      state.progress = \"pending\";\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.progress = \"done\";\n\n      if (action.payload.success === true) {\n        const index = state.tasks.findIndex(task => task.id === action.payload.result.id);\n\n        if (index > -1) {\n          state.success = `Edit success ${action.payload.result.name}`;\n          state.tasks[index] = action.payload.result; //\n        } else {\n          state.success = `Create success ${action.payload.result.name}`;\n          state.tasks.push(action.payload.result);\n        }\n      } else {\n        state.error = action.payload.error.message;\n      }\n    });\n    builder.addCase(deleteTask.pending, (state, action) => {\n      state.progress = \"pending\";\n    }).addCase(deleteTask.fulfilled, (state, action) => {\n      state.progress = \"done\";\n      state.success = `Delete success`;\n\n      if (action.payload.success === true) {\n        state.tasks = state.tasks.filter(task => {\n          return task.id !== action.payload.id;\n        });\n      } else {\n        state.error = action.payload.error.message;\n      }\n    });\n    builder.addCase(archiveTask.pending, (state, action) => {\n      state.progress = \"pending\";\n    }).addCase(archiveTask.fulfilled, (state, action) => {\n      state.progress = \"done\";\n\n      if (action.payload.success === true) {\n        state.success = `Archive success`;\n        const index = state.tasks.findIndex(task => task.id === action.payload.id);\n        state.tasks[index].isDeleted = true;\n      } else {\n        state.error = action.payload.error.message;\n      }\n    });\n    builder.addCase(deArchiveTask.pending, (state, action) => {\n      state.progress = \"pending\";\n    }).addCase(deArchiveTask.fulfilled, (state, action) => {\n      state.progress = \"done\";\n      state.success = `DeArchive success`;\n\n      if (action.payload.success === true) {\n        const index = state.tasks.findIndex(task => task.id === action.payload.id);\n        state.tasks[index].isDeleted = false;\n      } else {\n        state.error = action.payload.error.message;\n      }\n    });\n  }\n});\nexport const {\n  resetError,\n  resetProgress,\n  resetSuccess\n} = taskSlice.actions;\n\nconst selectSelf = state => state.task;\n\nconst allTaskSelector = createSelector(selectSelf, state => state.tasks);\nexport const commonTaskSelector = createSelector(allTaskSelector, tasks => tasks.filter(task => task.type === 0));\nexport const otherTaskSelector = createSelector(allTaskSelector, tasks => tasks.filter(task => task.type === 1));\nexport const errorSelector = createSelector(selectSelf, state => state.error);\nexport const successSelector = createSelector(selectSelf, state => state.success);\nexport const progressSelector = createSelector(selectSelf, state => state.progress);\nexport default taskSlice;","map":{"version":3,"names":["createSelector","createSlice","archiveTask","createTask","deArchiveTask","deleteTask","getTask","initialState","tasks","progress","success","error","taskSlice","name","reducers","resetError","state","resetSuccess","resetProgress","extraReducers","builder","addCase","fulfilled","action","payload","result","pending","index","findIndex","task","id","push","message","filter","isDeleted","actions","selectSelf","allTaskSelector","commonTaskSelector","type","otherTaskSelector","errorSelector","successSelector","progressSelector"],"sources":["C:/Users/Admin/Desktop/learn React/time-sheet - Copy/src/redux/reducers/taskReducer.js"],"sourcesContent":["import { createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  archiveTask,\r\n  createTask,\r\n  deArchiveTask,\r\n  deleteTask,\r\n  getTask,\r\n} from \"../actions/taskAction\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  progress: \"\",\r\n  success: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst taskSlice = createSlice({\r\n  name: \"task\",\r\n  initialState,\r\n  reducers: {\r\n    resetError: (state) => {\r\n      state.error = \"\";\r\n    },\r\n    resetSuccess: (state) => {\r\n      state.success = \"\";\r\n    },\r\n    resetProgress: (state) => {\r\n      state.progress = \"\";\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getTask.fulfilled, (state, action) => {\r\n      state.progress = \"done\";\r\n      state.tasks = action.payload.result;\r\n    });\r\n\r\n    builder\r\n      .addCase(createTask.pending, (state, action) => {\r\n        state.progress = \"pending\";\r\n      })\r\n      .addCase(createTask.fulfilled, (state, action) => {\r\n        state.progress = \"done\";\r\n        if (action.payload.success === true) {\r\n          const index = state.tasks.findIndex(\r\n            (task) => task.id === action.payload.result.id\r\n          );\r\n          if (index > -1) {\r\n            state.success = `Edit success ${action.payload.result.name}`;\r\n            state.tasks[index] = action.payload.result;\r\n            //\r\n          } else {\r\n            state.success = `Create success ${action.payload.result.name}`;\r\n            state.tasks.push(action.payload.result);\r\n          }\r\n        } else {\r\n          state.error = action.payload.error.message;\r\n        }\r\n      });\r\n\r\n    builder\r\n      .addCase(deleteTask.pending, (state, action) => {\r\n        state.progress = \"pending\";\r\n      })\r\n      .addCase(deleteTask.fulfilled, (state, action) => {\r\n        state.progress = \"done\";\r\n        state.success = `Delete success`;\r\n        if (action.payload.success === true) {\r\n          state.tasks = state.tasks.filter((task) => {\r\n            return task.id !== action.payload.id;\r\n          });\r\n        } else {\r\n          state.error = action.payload.error.message;\r\n        }\r\n      });\r\n\r\n    builder\r\n      .addCase(archiveTask.pending, (state, action) => {\r\n        state.progress = \"pending\";\r\n      })\r\n      .addCase(archiveTask.fulfilled, (state, action) => {\r\n        state.progress = \"done\";\r\n        if (action.payload.success === true) {\r\n          state.success = `Archive success`;\r\n          const index = state.tasks.findIndex(\r\n            (task) => task.id === action.payload.id\r\n          );\r\n          state.tasks[index].isDeleted = true;\r\n        } else {\r\n          state.error = action.payload.error.message;\r\n        }\r\n      });\r\n\r\n    builder\r\n      .addCase(deArchiveTask.pending, (state, action) => {\r\n        state.progress = \"pending\";\r\n      })\r\n      .addCase(deArchiveTask.fulfilled, (state, action) => {\r\n        state.progress = \"done\";\r\n        state.success = `DeArchive success`;\r\n        if (action.payload.success === true) {\r\n          const index = state.tasks.findIndex(\r\n            (task) => task.id === action.payload.id\r\n          );\r\n          state.tasks[index].isDeleted = false;\r\n        } else {\r\n          state.error = action.payload.error.message;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetError, resetProgress, resetSuccess } = taskSlice.actions;\r\nconst selectSelf = (state) => state.task;\r\n\r\nconst allTaskSelector = createSelector(selectSelf, (state) => state.tasks);\r\nexport const commonTaskSelector = createSelector(allTaskSelector, (tasks) =>\r\n  tasks.filter((task) => task.type === 0)\r\n);\r\nexport const otherTaskSelector = createSelector(allTaskSelector, (tasks) =>\r\n  tasks.filter((task) => task.type === 1)\r\n);\r\n\r\nexport const errorSelector = createSelector(selectSelf, (state) => state.error);\r\nexport const successSelector = createSelector(\r\n  selectSelf,\r\n  (state) => state.success\r\n);\r\n\r\nexport const progressSelector = createSelector(\r\n  selectSelf,\r\n  (state) => state.progress\r\n);\r\nexport default taskSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}