{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\learn React\\\\time-sheet - Copy\\\\src\\\\feature\\\\project\\\\Components\\\\createProject\\\\createProject.js\",\n    _s = $RefreshSig$();\n\n// import AddIcon from \"@mui/icons-material/Add\";\n// import { TabContext, TabList, TabPanel } from \"@mui/lab\";\n// import { Box, Button, Modal, Tab } from \"@mui/material\";\n// import React, { useState } from \"react\";\n// import { FormProvider, useForm } from \"react-hook-form\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import styled from \"styled-components\";\n// import {\n//   createProject,\n//   getCustomer,\n//   getUserNotPagging,\n// } from \"../../../../redux/actions/projectAction\";\n// import { getTask } from \"../../../../redux/actions/taskAction\";\n// import {\n//   taskSelector,\n//   userSelector,\n// } from \"../../../../redux/reducers/projectReducer\";\n// import GeneralTab from \"./tabCreateProject/generalTab/generalTab\";\n// import NotificationTab from \"./tabCreateProject/notificationTab/notificationTab\";\n// import TasksTab from \"./tabCreateProject/tasks/task\";\n// import TeamTab from \"./tabCreateProject/teams/team\";\n// const CreateProjectContent = styled.div`\n//   display: flex;\n// `;\n// const ButtonContainer = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n//   gap: 10px;\n//   position: fixed;\n//   bottom: 12px;\n//   right: 24px;\n// `;\n// const TitleHeader = styled.div`\n//   font-size: 30px;\n//   font-weight: bold;\n//   line-height: 48px;\n//   z-index: 1;\n//   color: rgba(0, 0, 0, 0.87);\n//   margin-bottom: 10px;\n//   margin-top: 20px;\n// `;\n// const Break = styled.hr`\n//   height: 0;\n//   box-sizing: content-box;\n//   margin-top: 20px;\n//   border: 0;\n//   border-top: 1px solid #eee;\n// `;\n// const ListTab = styled.div`\n//   overflow-y: auto;\n//   width: 100%;\n//   max-height: 68vh;\n//   &::-webkit-scrollbar {\n//     width: 10px;\n//   }\n//   &::-webkit-scrollbar-track {\n//     background: #f1f1f1;\n//   }\n//   &::-webkit-scrollbar-thumb {\n//     background: #888;\n//   }\n//   &::-webkit-scrollbar-thumb:hover {\n//     background: #555;\n//   }\n// `;\n// const TabLabel = styled.span`\n//   width: 112px;\n//   text-transform: none;\n//   font-size: 14px;\n//   font-weight: 500;\n// `;\n// const CreateForm = styled.form``;\n// const CreateProject = () => {\n//   const dispatch = useDispatch();\n//   const [open, setOpen] = useState(false);\n//   const handleOpen = () => {\n//     setOpen(true);\n//     dispatch(getCustomer());\n//     dispatch(getUserNotPagging());\n//     dispatch(getTask());\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//     reset();\n//   };\n//   const [value, setValue] = useState(\"1\");\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n//   const methods = useForm();\n//   const { handleSubmit, reset } = methods;\n//   const tasks = useSelector(taskSelector);\n//   const users = useSelector(userSelector);\n//   const handleCreate = (data) => {\n//     dispatch(\n//       createProject({\n//         ...data,\n//         tasks: tasks,\n//         users: users,\n//       })\n//     );\n//     handleClose();\n//   };\n//   return (\n//     <CreateProjectContent>\n//       <Button\n//         style={{\n//           background: \"#f24b50\",\n//           width: \"100%\",\n//           height: \"50px\",\n//           marginTop: \"15px\",\n//           marginBottom: \"20px\",\n//         }}\n//         variant=\"contained\"\n//         startIcon={<AddIcon />}\n//         onClick={handleOpen}\n//       >\n//         New Project\n//       </Button>\n//       <Modal open={open}>\n//         <Box\n//           sx={{\n//             position: \"absolute\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             transform: \"translate(-50%, -50%)\",\n//             width: \"78%\",\n//             height: \"85%\",\n//             bgcolor: \"#fff\",\n//             padding: \"20px\",\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             zIndex: 1000,\n//             borderRadius: \"4px\",\n//           }}\n//         >\n//           <FormProvider {...methods}>\n//             <CreateForm onSubmit={handleSubmit(handleCreate)}>\n//               <TitleHeader>Create Project</TitleHeader>\n//               <Break />\n//               <Box sx={{ width: \"100%\", zIndex: 0 }}>\n//                 <ListTab>\n//                   <TabContext value={value}>\n//                     <Box\n//                       sx={{\n//                         borderBottom: 1,\n//                         borderColor: \"divider\",\n//                       }}\n//                       style={{ fontSize: \"14px\", fontWeight: \"500\" }}\n//                     >\n//                       <TabList onChange={handleChange}>\n//                         <Tab label={<TabLabel>General</TabLabel>} value=\"1\" />\n//                         <Tab label={<TabLabel>Team</TabLabel>} value=\"2\" />\n//                         <Tab label={<TabLabel>Tasks</TabLabel>} value=\"3\" />\n//                         <Tab\n//                           label={<TabLabel>Notification</TabLabel>}\n//                           value=\"4\"\n//                         />\n//                       </TabList>\n//                     </Box>\n//                     <TabPanel sx={{ p: 0 }} value=\"1\">\n//                       <GeneralTab />\n//                     </TabPanel>\n//                     <TabPanel sx={{ p: 0 }} value=\"2\">\n//                       <TeamTab />\n//                     </TabPanel>\n//                     <TabPanel sx={{ p: 0 }} value=\"3\">\n//                       <TasksTab />\n//                     </TabPanel>\n//                     <TabPanel sx={{ p: 0 }} value=\"4\">\n//                       <NotificationTab />\n//                     </TabPanel>\n//                   </TabContext>\n//                 </ListTab>\n//               </Box>\n//               <ButtonContainer>\n//                 <Button\n//                   variant=\"outlined\"\n//                   color=\"error\"\n//                   sx={{\n//                     color: \"black\",\n//                     background: \"#fff\",\n//                     border: \"none\",\n//                     fontSize: 13,\n//                   }}\n//                   onClick={handleClose}\n//                 >\n//                   Cancel\n//                 </Button>\n//                 <Button\n//                   type=\"submit\"\n//                   variant=\"contained\"\n//                   style={{ background: \"red\" }}\n//                 >\n//                   Save\n//                 </Button>\n//               </ButtonContainer>\n//             </CreateForm>\n//           </FormProvider>\n//         </Box>\n//       </Modal>\n//     </CreateProjectContent>\n//   );\n// };\n// export default CreateProject;\nimport React, { useEffect, useState } from \"react\";\nimport SelectProject from \"./Components/SelectProject/SelectProject\";\nimport ListProject from \"./Components/listProject/ListProject\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProject } from \"../../redux/actions/projectAction\";\nimport { errorSelector, resetError, resetSuccess, successSelector } from \"../../redux/reducers/projectReducer\";\nimport { Alert, Snackbar } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport CreateProject from \"./Components/createProject/createProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectContainer = styled.div`\n  border: 20px solid #ccc;\n  box-sizing: border-box;\n  margin: 100px 0 0 300px;\n  height: 100%;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n`;\n_c = ProjectContainer;\nconst ProjectHeader = styled.div`\n  /* display: flex;\njustify-content: space-between; */\n  padding: 15px;\n  border-bottom: 1px solid rgba(204, 204, 204, 0.35);\n  position: relative;\n`;\n_c2 = ProjectHeader;\nconst TitleHeader = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  color: #111;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n_c3 = TitleHeader;\nconst Refresh = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  position: absolute;\n  top: 20px;\n  right: 15px;\n  color: #4c4c4c;\n  padding: none;\n`;\nconst RefreshButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: none;\n  position: absolute;\n  margin-top: 30px;\n  z-index: 1;\n  :hover {\n    background: #e9e9e9;\n    cursor: pointer;\n  }\n  width: 90px;\n  height: 48px;\n  padding: 8px 16px;\n  line-height: 48px;\n  overflow: auto;\n  border-radius: 4px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n`;\nconst AddContent = styled.div`\n  display: flex;\n  padding: 0 25px;\n  justify-content: space-between;\n`;\n_c4 = AddContent;\n\nconst Project = () => {\n  _s();\n\n  const error = useSelector(errorSelector);\n  const success = useSelector(successSelector);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProject({\n      status: 0\n    }));\n  }, [dispatch]);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  useEffect(() => {\n    if (error !== \"\") {\n      setOpenSnackbar(true);\n      setTimeout(() => {\n        dispatch(resetError());\n      }, 3000);\n    }\n\n    if (success !== \"\") {\n      setOpenSnackbar(true);\n      setTimeout(() => {\n        dispatch(resetSuccess());\n      }, 3000);\n    }\n  }, [error, success, dispatch]);\n  return /*#__PURE__*/_jsxDEV(ProjectContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectHeader, {\n      children: /*#__PURE__*/_jsxDEV(TitleHeader, {\n        children: \"Manage Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddContent, {\n      children: [/*#__PURE__*/_jsxDEV(CreateProject, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectProject, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListProject, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      onClose: () => setOpenSnackbar(false),\n      autoHideDuration: 2000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"filled\",\n        severity: error ? \"error\" : \"success\",\n        children: error ? error : success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Project, \"aGh1VeacxGclR6BWMV9jFHumDpQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c5 = Project;\nexport default Project;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ProjectContainer\");\n$RefreshReg$(_c2, \"ProjectHeader\");\n$RefreshReg$(_c3, \"TitleHeader\");\n$RefreshReg$(_c4, \"AddContent\");\n$RefreshReg$(_c5, \"Project\");","map":{"version":3,"names":["React","useEffect","useState","SelectProject","ListProject","useDispatch","useSelector","getProject","errorSelector","resetError","resetSuccess","successSelector","Alert","Snackbar","styled","CreateProject","ProjectContainer","div","ProjectHeader","TitleHeader","Refresh","RefreshButton","AddContent","Project","error","success","dispatch","status","openSnackbar","setOpenSnackbar","setTimeout","vertical","horizontal"],"sources":["C:/Users/Admin/Desktop/learn React/time-sheet - Copy/src/feature/project/Components/createProject/createProject.js"],"sourcesContent":["// import AddIcon from \"@mui/icons-material/Add\";\r\n// import { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\n// import { Box, Button, Modal, Tab } from \"@mui/material\";\r\n// import React, { useState } from \"react\";\r\n// import { FormProvider, useForm } from \"react-hook-form\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import styled from \"styled-components\";\r\n// import {\r\n//   createProject,\r\n//   getCustomer,\r\n//   getUserNotPagging,\r\n// } from \"../../../../redux/actions/projectAction\";\r\n// import { getTask } from \"../../../../redux/actions/taskAction\";\r\n// import {\r\n//   taskSelector,\r\n//   userSelector,\r\n// } from \"../../../../redux/reducers/projectReducer\";\r\n// import GeneralTab from \"./tabCreateProject/generalTab/generalTab\";\r\n// import NotificationTab from \"./tabCreateProject/notificationTab/notificationTab\";\r\n// import TasksTab from \"./tabCreateProject/tasks/task\";\r\n// import TeamTab from \"./tabCreateProject/teams/team\";\r\n\r\n// const CreateProjectContent = styled.div`\r\n//   display: flex;\r\n// `;\r\n\r\n// const ButtonContainer = styled.div`\r\n//   display: flex;\r\n//   justify-content: flex-end;\r\n//   gap: 10px;\r\n//   position: fixed;\r\n//   bottom: 12px;\r\n//   right: 24px;\r\n// `;\r\n\r\n// const TitleHeader = styled.div`\r\n//   font-size: 30px;\r\n//   font-weight: bold;\r\n//   line-height: 48px;\r\n//   z-index: 1;\r\n//   color: rgba(0, 0, 0, 0.87);\r\n//   margin-bottom: 10px;\r\n//   margin-top: 20px;\r\n// `;\r\n\r\n// const Break = styled.hr`\r\n//   height: 0;\r\n//   box-sizing: content-box;\r\n//   margin-top: 20px;\r\n//   border: 0;\r\n//   border-top: 1px solid #eee;\r\n// `;\r\n\r\n// const ListTab = styled.div`\r\n//   overflow-y: auto;\r\n//   width: 100%;\r\n//   max-height: 68vh;\r\n//   &::-webkit-scrollbar {\r\n//     width: 10px;\r\n//   }\r\n//   &::-webkit-scrollbar-track {\r\n//     background: #f1f1f1;\r\n//   }\r\n\r\n//   &::-webkit-scrollbar-thumb {\r\n//     background: #888;\r\n//   }\r\n//   &::-webkit-scrollbar-thumb:hover {\r\n//     background: #555;\r\n//   }\r\n// `;\r\n\r\n// const TabLabel = styled.span`\r\n//   width: 112px;\r\n//   text-transform: none;\r\n//   font-size: 14px;\r\n//   font-weight: 500;\r\n// `;\r\n\r\n// const CreateForm = styled.form``;\r\n\r\n// const CreateProject = () => {\r\n//   const dispatch = useDispatch();\r\n\r\n//   const [open, setOpen] = useState(false);\r\n//   const handleOpen = () => {\r\n//     setOpen(true);\r\n//     dispatch(getCustomer());\r\n//     dispatch(getUserNotPagging());\r\n//     dispatch(getTask());\r\n//   };\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//     reset();\r\n//   };\r\n\r\n//   const [value, setValue] = useState(\"1\");\r\n//   const handleChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   const methods = useForm();\r\n//   const { handleSubmit, reset } = methods;\r\n//   const tasks = useSelector(taskSelector);\r\n//   const users = useSelector(userSelector);\r\n\r\n//   const handleCreate = (data) => {\r\n//     dispatch(\r\n//       createProject({\r\n//         ...data,\r\n//         tasks: tasks,\r\n//         users: users,\r\n//       })\r\n//     );\r\n//     handleClose();\r\n//   };\r\n\r\n//   return (\r\n//     <CreateProjectContent>\r\n//       <Button\r\n//         style={{\r\n//           background: \"#f24b50\",\r\n//           width: \"100%\",\r\n//           height: \"50px\",\r\n//           marginTop: \"15px\",\r\n//           marginBottom: \"20px\",\r\n//         }}\r\n//         variant=\"contained\"\r\n//         startIcon={<AddIcon />}\r\n//         onClick={handleOpen}\r\n//       >\r\n//         New Project\r\n//       </Button>\r\n//       <Modal open={open}>\r\n//         <Box\r\n//           sx={{\r\n//             position: \"absolute\",\r\n//             top: \"50%\",\r\n//             left: \"50%\",\r\n//             transform: \"translate(-50%, -50%)\",\r\n//             width: \"78%\",\r\n//             height: \"85%\",\r\n//             bgcolor: \"#fff\",\r\n//             padding: \"20px\",\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             zIndex: 1000,\r\n//             borderRadius: \"4px\",\r\n//           }}\r\n//         >\r\n//           <FormProvider {...methods}>\r\n//             <CreateForm onSubmit={handleSubmit(handleCreate)}>\r\n//               <TitleHeader>Create Project</TitleHeader>\r\n//               <Break />\r\n//               <Box sx={{ width: \"100%\", zIndex: 0 }}>\r\n//                 <ListTab>\r\n//                   <TabContext value={value}>\r\n//                     <Box\r\n//                       sx={{\r\n//                         borderBottom: 1,\r\n//                         borderColor: \"divider\",\r\n//                       }}\r\n//                       style={{ fontSize: \"14px\", fontWeight: \"500\" }}\r\n//                     >\r\n//                       <TabList onChange={handleChange}>\r\n//                         <Tab label={<TabLabel>General</TabLabel>} value=\"1\" />\r\n//                         <Tab label={<TabLabel>Team</TabLabel>} value=\"2\" />\r\n//                         <Tab label={<TabLabel>Tasks</TabLabel>} value=\"3\" />\r\n//                         <Tab\r\n//                           label={<TabLabel>Notification</TabLabel>}\r\n//                           value=\"4\"\r\n//                         />\r\n//                       </TabList>\r\n//                     </Box>\r\n//                     <TabPanel sx={{ p: 0 }} value=\"1\">\r\n//                       <GeneralTab />\r\n//                     </TabPanel>\r\n//                     <TabPanel sx={{ p: 0 }} value=\"2\">\r\n//                       <TeamTab />\r\n//                     </TabPanel>\r\n//                     <TabPanel sx={{ p: 0 }} value=\"3\">\r\n//                       <TasksTab />\r\n//                     </TabPanel>\r\n//                     <TabPanel sx={{ p: 0 }} value=\"4\">\r\n//                       <NotificationTab />\r\n//                     </TabPanel>\r\n//                   </TabContext>\r\n//                 </ListTab>\r\n//               </Box>\r\n//               <ButtonContainer>\r\n//                 <Button\r\n//                   variant=\"outlined\"\r\n//                   color=\"error\"\r\n//                   sx={{\r\n//                     color: \"black\",\r\n//                     background: \"#fff\",\r\n//                     border: \"none\",\r\n\r\n//                     fontSize: 13,\r\n//                   }}\r\n//                   onClick={handleClose}\r\n//                 >\r\n//                   Cancel\r\n//                 </Button>\r\n//                 <Button\r\n//                   type=\"submit\"\r\n//                   variant=\"contained\"\r\n//                   style={{ background: \"red\" }}\r\n//                 >\r\n//                   Save\r\n//                 </Button>\r\n//               </ButtonContainer>\r\n//             </CreateForm>\r\n//           </FormProvider>\r\n//         </Box>\r\n//       </Modal>\r\n//     </CreateProjectContent>\r\n//   );\r\n// };\r\n\r\n// export default CreateProject;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SelectProject from \"./Components/SelectProject/SelectProject\";\r\nimport ListProject from \"./Components/listProject/ListProject\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProject } from \"../../redux/actions/projectAction\";\r\nimport {\r\n  errorSelector,\r\n  resetError,\r\n  resetSuccess,\r\n  successSelector,\r\n} from \"../../redux/reducers/projectReducer\";\r\nimport { Alert, Snackbar } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport CreateProject from \"./Components/createProject/createProject\";\r\n\r\nconst ProjectContainer = styled.div`\r\n  border: 20px solid #ccc;\r\n  box-sizing: border-box;\r\n  margin: 100px 0 0 300px;\r\n  height: 100%;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\r\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n`;\r\n\r\nconst ProjectHeader = styled.div`\r\n  /* display: flex;\r\njustify-content: space-between; */\r\n  padding: 15px;\r\n  border-bottom: 1px solid rgba(204, 204, 204, 0.35);\r\n  position: relative;\r\n`;\r\n\r\nconst TitleHeader = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #111;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Refresh = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 15px;\r\n  color: #4c4c4c;\r\n  padding: none;\r\n`;\r\n\r\nconst RefreshButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: none;\r\n  position: absolute;\r\n  margin-top: 30px;\r\n  z-index: 1;\r\n  :hover {\r\n    background: #e9e9e9;\r\n    cursor: pointer;\r\n  }\r\n  width: 90px;\r\n  height: 48px;\r\n  padding: 8px 16px;\r\n  line-height: 48px;\r\n  overflow: auto;\r\n  border-radius: 4px;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\r\n    rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n`;\r\n\r\nconst AddContent = styled.div`\r\n  display: flex;\r\n  padding: 0 25px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Project = () => {\r\n  const error = useSelector(errorSelector);\r\n  const success = useSelector(successSelector);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getProject({ status: 0 }));\r\n  }, [dispatch]);\r\n\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  useEffect(() => {\r\n    if (error !== \"\") {\r\n      setOpenSnackbar(true);\r\n      setTimeout(() => {\r\n        dispatch(resetError());\r\n      }, 3000);\r\n    }\r\n    if (success !== \"\") {\r\n      setOpenSnackbar(true);\r\n      setTimeout(() => {\r\n        dispatch(resetSuccess());\r\n      }, 3000);\r\n    }\r\n  }, [error, success, dispatch]);\r\n\r\n  return (\r\n    <ProjectContainer>\r\n      <ProjectHeader>\r\n        <TitleHeader>Manage Projects</TitleHeader>\r\n      </ProjectHeader>\r\n\r\n      <AddContent>\r\n        <CreateProject />\r\n        <SelectProject />\r\n      </AddContent>\r\n      <ListProject />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        onClose={() => setOpenSnackbar(false)}\r\n        autoHideDuration={2000}\r\n      >\r\n        <Alert variant=\"filled\" severity={error ? \"error\" : \"success\"}>\r\n          {error ? error : success}\r\n        </Alert>\r\n      </Snackbar>\r\n    </ProjectContainer>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"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"},"metadata":{},"sourceType":"module"}