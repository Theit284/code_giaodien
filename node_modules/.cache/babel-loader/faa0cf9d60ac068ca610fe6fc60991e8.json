{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  const {\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    shouldSkipGeneratingVar: designSystemShouldSkipGeneratingVar,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider(_ref) {\n    let {\n      children,\n      theme: themeProp = defaultTheme,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = designSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root',\n      shouldSkipGeneratingVar = designSystemShouldSkipGeneratingVar\n    } = _ref;\n    const hasMounted = React.useRef(false);\n    const {\n      colorSchemes = {},\n      components = {},\n      cssVarPrefix\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark; // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n\n    const calculatedMode = (() => {\n      if (!mode) {\n        // This scope occurs on the server\n        if (defaultMode === 'system') {\n          return designSystemMode;\n        }\n\n        return defaultMode;\n      }\n\n      return mode;\n    })();\n\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'system'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })(); // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n\n\n    const {\n      css: rootCss,\n      vars: rootVars,\n      parsedTheme\n    } = (0, _cssVarsParser.default)(restThemeProp, {\n      prefix: cssVarPrefix,\n      shouldSkipGeneratingVar\n    }); // 3. Start composing the theme object\n\n    let theme = (0, _extends2.default)({}, parsedTheme, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    }); // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(_ref2 => {\n      let [key, scheme] = _ref2;\n      const {\n        css,\n        vars,\n        parsedTheme: parsedScheme\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix: cssVarPrefix,\n        shouldSkipGeneratingVar\n      });\n      theme.vars = (0, _utils.deepmerge)(theme.vars, vars);\n\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        theme = (0, _extends2.default)({}, theme, parsedScheme);\n\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    }); // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]); // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(documentNode.body))();\n\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        systemMode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          [colorSchemeSelector]: rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: defaultColorSchemeStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: otherColorSchemesStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: _propTypes.default.any,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * A function to determine if the key, value should be attached as CSS Variable\n     */\n    shouldSkipGeneratingVar: _propTypes.default.func,\n\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DISABLE_CSS_TRANSITION","default","createCssVarsProvider","_extends2","_objectWithoutPropertiesLoose2","_utils","React","_interopRequireWildcard","_propTypes","_styledEngine","_cssVarsParser","_ThemeProvider","_getInitColorSchemeScript","_useCurrentColorScheme","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","options","theme","defaultTheme","attribute","defaultAttribute","DEFAULT_ATTRIBUTE","modeStorageKey","defaultModeStorageKey","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","defaultColorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","defaultMode","designSystemMode","defaultColorScheme","designSystemColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","shouldSkipGeneratingVar","designSystemShouldSkipGeneratingVar","resolveTheme","excludeVariablesFromRoot","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","useColorScheme","useContext","Error","process","env","NODE_ENV","formatMuiErrorMessage","CssVarsProvider","children","themeProp","storageWindow","window","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","hasMounted","useRef","components","cssVarPrefix","restThemeProp","allColorSchemes","keys","defaultLightColorScheme","defaultDarkColorScheme","mode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","setColorScheme","supportedColorSchemes","calculatedMode","calculatedColorScheme","css","rootCss","vars","rootVars","parsedTheme","prefix","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","entries","forEach","scheme","parsedScheme","deepmerge","palette","resolvedDefaultColorScheme","excludedVariables","cssVar","useEffect","setAttribute","timer","current","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","jsxs","Provider","jsx","GlobalStyles","styles","propTypes","string","node","any","oneOfType","object","bool","func","getInitColorSchemeScript","params"],"sources":["C:/Users/Admin/Desktop/learn React/time-sheet - Copy/node_modules/@mui/system/cssVars/createCssVarsProvider.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  const {\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    shouldSkipGeneratingVar: designSystemShouldSkipGeneratingVar,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider({\n    children,\n    theme: themeProp = defaultTheme,\n    modeStorageKey = defaultModeStorageKey,\n    colorSchemeStorageKey = defaultColorSchemeStorageKey,\n    attribute = defaultAttribute,\n    defaultMode = designSystemMode,\n    defaultColorScheme = designSystemColorScheme,\n    disableTransitionOnChange = designSystemTransitionOnChange,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    documentNode = typeof document === 'undefined' ? undefined : document,\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n    colorSchemeSelector = ':root',\n    shouldSkipGeneratingVar = designSystemShouldSkipGeneratingVar\n  }) {\n    const hasMounted = React.useRef(false);\n    const {\n      colorSchemes = {},\n      components = {},\n      cssVarPrefix\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark; // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n\n    const calculatedMode = (() => {\n      if (!mode) {\n        // This scope occurs on the server\n        if (defaultMode === 'system') {\n          return designSystemMode;\n        }\n\n        return defaultMode;\n      }\n\n      return mode;\n    })();\n\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'system'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })(); // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n\n\n    const {\n      css: rootCss,\n      vars: rootVars,\n      parsedTheme\n    } = (0, _cssVarsParser.default)(restThemeProp, {\n      prefix: cssVarPrefix,\n      shouldSkipGeneratingVar\n    }); // 3. Start composing the theme object\n\n    let theme = (0, _extends2.default)({}, parsedTheme, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    }); // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars,\n        parsedTheme: parsedScheme\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix: cssVarPrefix,\n        shouldSkipGeneratingVar\n      });\n      theme.vars = (0, _utils.deepmerge)(theme.vars, vars);\n\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        theme = (0, _extends2.default)({}, theme, parsedScheme);\n\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    }); // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]); // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(documentNode.body))();\n\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        systemMode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          [colorSchemeSelector]: rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: defaultColorSchemeStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: otherColorSchemesStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: _propTypes.default.any,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * A function to determine if the key, value should be attached as CSS Variable\n     */\n    shouldSkipGeneratingVar: _propTypes.default.func,\n\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}