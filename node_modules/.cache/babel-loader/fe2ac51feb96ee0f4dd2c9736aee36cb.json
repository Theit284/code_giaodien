{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { activeProjectApi, createCustomerApi, createProjectApi, deleteProjectApi, getCustomerApi, getProjectApi, getSingleProjectApi, getUserNotPaggingApi, inactiveProjectApi } from \"../../api/projectApi\";\nexport const getProject = createAsyncThunk(`/services/app/Project/GetAll`, async _ref => {\n  let {\n    status,\n    search\n  } = _ref;\n  const res = await getProjectApi({\n    status,\n    search\n  });\n  return res;\n});\nexport const getSingleProject = createAsyncThunk(`/services/app/Project/GetSingle`, async input => {\n  const res = await getSingleProjectApi(input);\n  return res;\n});\nexport const createProject = createAsyncThunk(`/services/app/Project/Save`, async _ref2 => {\n  let {\n    id,\n    name,\n    code,\n    status,\n    timeStart,\n    timeEnd,\n    note,\n    projectType,\n    customerId,\n    tasks,\n    users,\n    projectTargetUsers,\n    isAllUserBelongTo\n  } = _ref2;\n  const res = await createProjectApi({\n    id,\n    name,\n    code,\n    status,\n    timeStart,\n    timeEnd,\n    note,\n    projectType,\n    customerId,\n    tasks,\n    users,\n    projectTargetUsers,\n    isAllUserBelongTo\n  });\n  return res;\n});\nexport const getCustomer = createAsyncThunk(`/services/app/Customer/GetAll`, async () => {\n  const res = await getCustomerApi();\n  return res;\n});\nexport const createCustomer = createAsyncThunk(`/services/app/Customer/Save`, async _ref3 => {\n  let {\n    name,\n    address,\n    code,\n    id\n  } = _ref3;\n  const res = await createCustomerApi({\n    name,\n    address,\n    code,\n    id\n  });\n  return res;\n});\nexport const activeProject = createAsyncThunk(`/services/app/Project/Active`, async _ref4 => {\n  let {\n    id\n  } = _ref4;\n  const res = { ...(await activeProjectApi({\n      id\n    })),\n    id\n  };\n  return res;\n});\nexport const inactiveProject = createAsyncThunk(`/services/app/Project/Inactive`, async _ref5 => {\n  let {\n    id\n  } = _ref5;\n  const res = { ...(await inactiveProjectApi({\n      id\n    })),\n    id\n  };\n  return res;\n});\nexport const deleteProject = createAsyncThunk(`/services/app/Project/Delete`, async id => {\n  const res = { ...(await deleteProjectApi(id)),\n    id\n  };\n  return res;\n});\nexport const getUserNotPagging = createAsyncThunk(`/services/app/User/GetUserNotPagging`, async () => {\n  const res = await getUserNotPaggingApi();\n  return res;\n});","map":{"version":3,"names":["createAsyncThunk","activeProjectApi","createCustomerApi","createProjectApi","deleteProjectApi","getCustomerApi","getProjectApi","getSingleProjectApi","getUserNotPaggingApi","inactiveProjectApi","getProject","status","search","res","getSingleProject","input","createProject","id","name","code","timeStart","timeEnd","note","projectType","customerId","tasks","users","projectTargetUsers","isAllUserBelongTo","getCustomer","createCustomer","address","activeProject","inactiveProject","deleteProject","getUserNotPagging"],"sources":["C:/Users/Admin/Desktop/learn React/time-sheet - Copy/src/redux/actions/projectAction.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  activeProjectApi,\r\n  createCustomerApi,\r\n  createProjectApi,\r\n  deleteProjectApi,\r\n  getCustomerApi,\r\n  getProjectApi,\r\n  getSingleProjectApi,\r\n  getUserNotPaggingApi,\r\n  inactiveProjectApi,\r\n} from \"../../api/projectApi\";\r\n\r\nexport const getProject = createAsyncThunk(\r\n  `/services/app/Project/GetAll`,\r\n  async ({ status, search }) => {\r\n    const res = await getProjectApi({ status, search });\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const getSingleProject = createAsyncThunk(\r\n  `/services/app/Project/GetSingle`,\r\n  async (input) => {\r\n    const res = await getSingleProjectApi(input);\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const createProject = createAsyncThunk(\r\n  `/services/app/Project/Save`,\r\n  async ({\r\n    id,\r\n    name,\r\n    code,\r\n    status,\r\n    timeStart,\r\n    timeEnd,\r\n    note,\r\n    projectType,\r\n    customerId,\r\n    tasks,\r\n    users,\r\n    projectTargetUsers,\r\n    isAllUserBelongTo,\r\n  }) => {\r\n    const res = await createProjectApi({\r\n      id,\r\n      name,\r\n      code,\r\n      status,\r\n      timeStart,\r\n      timeEnd,\r\n      note,\r\n      projectType,\r\n      customerId,\r\n      tasks,\r\n      users,\r\n      projectTargetUsers,\r\n      isAllUserBelongTo,\r\n    });\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const getCustomer = createAsyncThunk(\r\n  `/services/app/Customer/GetAll`,\r\n  async () => {\r\n    const res = await getCustomerApi();\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const createCustomer = createAsyncThunk(\r\n  `/services/app/Customer/Save`,\r\n  async ({ name, address, code, id }) => {\r\n    const res = await createCustomerApi({ name, address, code, id });\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const activeProject = createAsyncThunk(\r\n  `/services/app/Project/Active`,\r\n  async ({ id }) => {\r\n    const res = { ...(await activeProjectApi({ id })), id };\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const inactiveProject = createAsyncThunk(\r\n  `/services/app/Project/Inactive`,\r\n  async ({ id }) => {\r\n    const res = { ...(await inactiveProjectApi({ id })), id };\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const deleteProject = createAsyncThunk(\r\n  `/services/app/Project/Delete`,\r\n  async (id) => {\r\n    const res = { ...(await deleteProjectApi(id)), id };\r\n    return res;\r\n  }\r\n);\r\n\r\nexport const getUserNotPagging = createAsyncThunk(\r\n  `/services/app/User/GetUserNotPagging`,\r\n  async () => {\r\n    const res = await getUserNotPaggingApi();\r\n    return res;\r\n  }\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}